{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "para_acronym_region": {
      "type": "string",
      "allowedValues": [
        "ne",
        "we"
      ],
      "defaultValue": "ne"
    },
    "para_target_env": {
      "type": "string",
      "allowedValues": [
        "vse",
        "dev",
        "alp",
        "bra",
        "cha",
        "pre",
        "uat",
        "prd"
      ],
      "defaultValue": "vse"
    },
    "para_appFamily_name": {
      "type": "string",
      "maxLength": 3
    },
    "para_application_name": {
      "type": "string",
      "maxLength": 12
    },
    "para_svcPlan": {
      "type": "string",
      "defaultValue": ""
    },
    "para_svcPlanSku": {
      "type": "string",
      "defaultValue": "Dynamic"
    },
    "para_svcPlanSize": {
      "type": "string",
      "defaultValue": "Y1"
    },
    "para_svcPlanFamily": {
      "type": "string",
      "defaultValue": "Y"
    },
    "para_svcPlanCapacity": {
      "type": "string",
      "defaultValue": "0"
    },
    "para_svcPlan2": {
      "type": "string",
      "defaultValue": ""
    },
    "para_svcPlanSku2": {
      "type": "string",
      "defaultValue": "Free"
    },
    "para_svcPlanSize2": {
      "type": "string",
      "defaultValue": "F1"
    },
    "para_svcPlanFamily2": {
      "type": "string",
      "defaultValue": "F"
    },
    "para_svcPlanCapacity2": {
      "type": "string",
      "defaultValue": "0"
    },


    "para_kvSecretsObject": { "type": "object" },
    "para_alwaysOn": {
      "type": "bool",
      "defaultValue": false
    },
    "para_funcState": {
      "type": "string",
      "defaultValue": "Stopped"
    },
    "para_str_tbl_connection_name": {
      "defaultValue": "azuretables",
      "type": "String"
    },
    "para_str_que_connection_name": {
      "type": "String",
      "defaultValue": "azurequeues"
    },
    "para_tableContainer": {
      "type": "String"
    },
    "para_guessContainer": {
      "type": "String"
    }
  },
  "variables": {
    "namingConvention": {
      "prefixes": {
        "Storage": "st",
        "FunctionApp": "func",
        "AppInsights": "appi",
        "AppServicePlan": "plan",
        "KeyVault": "kv",
        "NetworkInterface": "nic",
        "PrivateEndpoint": "pe",
        "ResourceGroup": "rg",
        "SqlServer": "sql",
        "Identity": "id",
        "EventGridTopic": "evgt",
        "SignalR": "sigr",
        "StaticWebApp": "stapp",
        "EventHubNS": "evhns",
        "EventHubDS": "ds",
        "EventHub": "evh",
        "CommSvc": "acs",
        "CommSvcEmail": "acse",
        "CommSvcEmailDom": "acsedm",
        "WebApp": "app"
      }
    },
    "var_sub_id": "[subscription().subscriptionId]",
    "var_ten_id": "[subscription().tenantId]",
    "var_env_region_delim": "[ tolower(concat(parameters('para_target_env'), '-', parameters('para_acronym_region')))]",
    "var_env_region": "[tolower(concat(parameters('para_target_env'), '-', parameters('para_acronym_region')))]",

    "var_application_name_delim": "[ tolower(concat( parameters('para_appFamily_name'), '-', parameters('para_application_name'), '-'))]",
    "var_application_name": "[ tolower(concat(parameters('para_application_name')))]",

    "var_str_name": "[concat( variables('namingConvention').prefixes.Storage, take(tolower(parameters('para_application_name')), 12), tolower(parameters('para_target_env')), tolower(parameters('para_acronym_region')))]",
    "var_str_resId": "[resourceId(resourceGroup().Name,'Microsoft.Storage/storageAccounts', variables('var_str_name'))]",

    "var_kv_name": "[concat(variables('namingConvention').prefixes.KeyVault, '-', variables('var_application_name_delim'),  variables('var_env_region_delim'))]",
    "var_azf_name": "[concat(variables('namingConvention').prefixes.FunctionApp, '-', variables('var_application_name_delim'),  variables('var_env_region_delim'))]",

    "var_appin_name": "[concat(variables('namingConvention').prefixes.AppInsights, '-', variables('var_application_name_delim'),  variables('var_env_region_delim'))]",
    "var_id_name": "[concat(variables('namingConvention').prefixes.Identity, '-', variables('var_application_name_delim'),  variables('var_env_region_delim'))]",
    "var_app_name": "[concat(variables('namingConvention').prefixes.WebApp, '-', variables('var_application_name_delim'),  variables('var_env_region_delim'))]",

    // If a para_SvcPlan is passed then use that, else create a new name following std format
    "svcpln_name": "[concat(variables('namingConvention').prefixes.AppServicePlan, '-', variables('var_application_name_delim'), tolower(variables('var_env_region_delim')))]",
    "svcpln_name2": "[concat(variables('namingConvention').prefixes.AppServicePlan, '-app-', tolower(parameters('para_application_name')),'-', tolower(variables('var_env_region_delim')))]",
    "var_svcpln_name": "[if(equals(parameters('para_svcPlan'),''), variables('svcpln_name'), parameters('para_svcPlan'))]",
    "var_svcpln_name2": "[if(equals(parameters('para_svcPlan2'),''), variables('svcpln_name2'), parameters('para_svcPlan2'))]",

    "var_uaid_name": "[concat('/subscriptions/',variables('var_sub_id'),'/resourcegroups/', resourceGroup().Name, '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/', tolower(variables('var_id_name')))]"

    //"var_str_tbl_conid": "[concat('/subscriptions/', variables('var_sub_id'),'/resourceGroups/', resourceGroup().location,'/providers/Microsoft.Web/connections/', parameters('para_str_tbl_connection_name'))]",
    //"var_str_tbl_id": "[concat('/subscriptions/', variables('var_sub_id'),'/providers/Microsoft.Web/locations/', resourceGroup().location,'/managedApis/', parameters('para_str_tbl_connection_name'))]",
    //"var_str_que_id": "[concat('/subscriptions/', variables('var_sub_id'),'/providers/Microsoft.Web/locations/', resourceGroup().location,'/managedApis/', parameters('para_str_que_connection_name'))]",
    //"var_str_tbl_con": "[concat('/subscriptions/', variables('var_sub_id'),'/resourceGroups/',resourceGroup().Name,'/providers/Microsoft.Web/connections/', parameters('para_str_tbl_connection_name'))]",
    //"var_str_que_con": "[concat('/subscriptions/', variables('var_sub_id'),'/resourceGroups/',resourceGroup().Name,'/providers/Microsoft.Web/connections/', parameters('para_str_que_connection_name'))]"
  },
  "resources": [
    {
      "apiVersion": "2016-01-01",
      "dependsOn": [],
      "kind": "Storage",
      "location": "[resourceGroup().location]",
      "name": "[variables('var_str_name')]",
      "properties": {
        "encryption": {
          "keySource": "Microsoft.Storage",
          "services": {
            "blob": {
              "enabled": true
            }
          }
        }
      },
      "resources": [],
      "sku": {
        "name": "Standard_LRS",
        "tier": "Standard"
      },
      "tags": {
        "displayName": "StorageAcct"
      },
      "type": "Microsoft.Storage/storageAccounts"
    },
    {
      "apiVersion": "2015-05-01",
      "kind": "app",
      "location": "[resourceGroup().location]",
      "name": "[variables('var_appin_name')]",
      "properties": {
        "Application_Type": "web",
        "ApplicationId": "[variables('var_appin_name')]"
      },
      "tags": {
        "displayName": "AppInsightsComponent"
      },
      "type": "Microsoft.Insights/components"
    },
    {
      "apiVersion": "2016-09-01",
      "dependsOn": [],
      "kind": "app",
      "location": "[resourceGroup().location]",
      "name": "[variables('var_svcpln_name')]",
      "properties": {
        "adminSiteName": "",
        "name": "[variables('var_svcpln_name')]",
        "perSiteScaling": false,
        "reserved": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0,
        "workerTierName": ""
      },
      "scale": null,
      "sku": {
        "name": "[parameters('para_svcPlanSize')]",
        "tier": "[parameters('para_svcPlanSku')]",
        "size": "[parameters('para_svcPlanSize')]",
        "family": "[parameters('para_svcPlanFamily')]",
        "capacity": "[parameters('para_svcPlanCapacity')]"
      },
      "tags": {
        "displayName": "Function Service Plan/ Farm"
      },
      "type": "Microsoft.Web/serverfarms"
    },
    {
      "apiVersion": "2016-09-01",
      "dependsOn": [],
      "kind": "app",
      "location": "[resourceGroup().location]",
      "name": "[variables('var_svcpln_name2')]",
      "properties": {
        "adminSiteName": "",
        "name": "[variables('var_svcpln_name2')]",
        "perSiteScaling": false,
        "reserved": false,
        "targetWorkerCount": 0,
        "targetWorkerSizeId": 0,
        "workerTierName": ""
      },
      "scale": null,
      "sku": {
        "name": "[parameters('para_svcPlanSize2')]",
        "tier": "[parameters('para_svcPlanSku2')]",
        "size": "[parameters('para_svcPlanSize2')]",
        "family": "[parameters('para_svcPlanFamily2')]",
        "capacity": "[parameters('para_svcPlanCapacity2')]"
      },
      "tags": {
        "displayName": "Web App Service Plan/ Farm"
      },
      "type": "Microsoft.Web/serverfarms"
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2023-01-31",
      "name": "[variables('var_id_name')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "UserAssignedIdentities",
        "environment": "[parameters('para_target_env')]",
        "project": "[parameters('para_application_name')]"
      }
    },

    // Web Site
    {
      "apiVersion": "2015-08-01",
      "name": "[variables('var_app_name')]",
      "type": "Microsoft.Web/sites",
      "location": "[resourceGroup().location]",
      "tags": {
        "displayName": "Website"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms/', variables('var_svcpln_name2'))]"
      ],
      "properties": {
        "name": "[variables('var_app_name')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('var_svcpln_name2'))]"
      },
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[variables('var_uaid_name')]": {}
        }
      }
    },
    {
      "apiVersion": "2021-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('var_app_name'))]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[concat(variables('var_app_name'), '/web')]",
      "properties": {
        "webSocketsEnabled": true
      },
      "tags": {
        "displayName": "[concat('Website Web- ', variables('var_app_name'))]",
        "environment": "[parameters('para_target_env')]",
        "project": "[parameters('para_application_name')]"
      },
      "type": "Microsoft.Web/sites/config"
    },
    {
      "apiVersion": "2021-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('var_app_name'))]",
        "[resourceId('Microsoft.Insights/components', variables('var_appin_name'))]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[concat(variables('var_app_name'),'/appsettings')]",
      "properties": {
        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(concat('microsoft.insights/components/', variables('var_appin_name'))).InstrumentationKey]"
      },
      "tags": {
        "displayName": "[concat('Website Settings- ', variables('var_app_name'))]",
        "environment": "[parameters('para_target_env')]",
        "project": "[parameters('para_application_name')]"
      },
      "type": "Microsoft.Web/sites/config"
    },

    // Functions
    {
      "apiVersion": "2021-02-01",
      "dependsOn": [
        "[concat('Microsoft.Web/serverfarms/', variables('var_svcpln_name'))]",
        "[concat('Microsoft.ManagedIdentity/userAssignedIdentities/', variables('var_id_name'))]"
      ],
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[variables('var_uaid_name')]": {}
        }
      },
      "kind": "functionapp",
      "location": "[resourceGroup().location]",
      "name": "[variables('var_azf_name')]",
      "properties": {
        "state": "[parameters('para_funcState')]",
        "name": "[variables('var_azf_name')]",
        "keyVaultReferenceIdentity": "[variables('var_uaid_name')]",
        "siteConfig": {
          "alwaysOn": "[parameters('para_alwaysOn')]"
        },
        "netFrameworkVersion": "v6.0",
        "clientAffinityEnabled": false,
        "serverFarmId": "[variables('var_svcpln_name')]",
        //        "hostingEnvironment": "[variables('var_svcpln_env')]",
        "hostNameSslStates": [],
        "httpsOnly": true
      },
      "resources": [
      ],
      "tags": {
        "displayName": "[concat('Function - ', variables('var_azf_name'))]",
        "environment": "[parameters('para_target_env')]",
        "project": "[parameters('para_application_name')]"
      },
      "type": "Microsoft.Web/sites"
    },
    {
      "apiVersion": "2021-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('var_azf_name'))]",
        "[resourceId('Microsoft.Web/sites', variables('var_app_name'))]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[concat(variables('var_azf_name'), '/web')]",
      "properties": {
        "alwaysOn": "[parameters('para_alwaysOn')]",
        "netFrameworkVersion": "v6.0",
        //"vnetname": "[parameters('para_vnet_name')]"
        "cors": {
          "allowedOrigins": [
            "[concat('https://',reference(resourceId('Microsoft.Web/sites', variables('var_app_name')),'2022-03-01').defaultHostName )]",
            "http://localhost:4200"
          ],
          "supportCredentials": true
        },
        "apiDefinition": {
          "url": "[concat('https://', reference(concat('Microsoft.Web/sites/', variables('var_azf_name'))).defaultHostName, '/api/swagger.json')]"
        }
      },
      "tags": {
        "displayName": "[concat('Function Web- ', variables('var_azf_name'))]",
        "environment": "[parameters('para_target_env')]",
        "project": "[parameters('para_application_name')]"
      },
      "type": "Microsoft.Web/sites/config"
    },
    {
      "apiVersion": "2021-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('var_azf_name'))]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[concat(variables('var_azf_name'), '/metadata')]",
      "properties": {
        "CURRENT_STACK": "dotnet"
      },
      "tags": {
        "displayName": "Az Function metadata",
        "environment": "[parameters('para_target_env')]",
        "project": "[parameters('para_application_name')]"
      },
      "type": "Microsoft.Web/sites/config"
    },
    {
      "apiVersion": "2021-01-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('var_azf_name'))]"
      ],
      "location": "[resourceGroup().location]",
      "name": "[concat(variables('var_azf_name'),'/appsettings')]",
      "properties": {
        "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('var_str_name'),';AccountKey=',listKeys(variables('var_str_resId'),'2015-05-01-preview').key1) ]",
        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(concat('microsoft.insights/components/', variables('var_appin_name'))).InstrumentationKey]",
        "WEBSITE_ENABLE_SYNC_UPDATE_SITE": "true",
        "WEBSITE_RUN_FROM_PACKAGE": 1,
        "FUNCTIONS_EXTENSION_VERSION": "~4",
        "FUNCTIONS_WORKER_RUNTIME": "dotnet-isolated",
        "WEBSITE_CONTENTSHARE": "[variables('var_azf_name')]",
        "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('var_str_name'),';AccountKey=',listKeys(variables('var_str_resId'),'2015-05-01-preview').key1) ]",

        "AzureStorageAcct": "[variables('var_str_name')]",
        "AzureStorageKey": "[concat(listKeys(variables('var_str_resId'),'2015-05-01-preview').key1) ]",

        "TableContainer": "[parameters('para_tableContainer')]",
        "GuessContainer": "[parameters('para_guessContainer')]"
      },
      "tags": {
        "displayName": "[concat('Function Settings- ', variables('var_azf_name'))]",
        "environment": "[parameters('para_target_env')]",
        "project": "[parameters('para_application_name')]"
      },
      "type": "Microsoft.Web/sites/config"
    }
  ],
  "outputs": {}
}
