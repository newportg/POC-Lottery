@*@page "/fetchanalysis"

@using Lottery.Data
@inject IThunderBallService ThunderBallService

<h1>ThunderBall Analysis</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (items == null)
{
    <p><em>Loading...</em></p>
}
else
{
}


@code
{
        IList<ThunderBall> items = new List<ThunderBall>();

    private bool IsSortedAscending;
    private string CurrentSortColumn;
    private ThunderBallAnalysis branches = new ThunderBallAnalysis();

    protected override async Task OnInitializedAsync()
    {

        var request = new HttpRequestMessage(HttpMethod.Get,
            "https://api.github.com/repos/dotnet/AspNetCore.Docs/branches");
        request.Headers.Add("Accept", "application/vnd.github.v3+json");
        request.Headers.Add("User-Agent", "HttpClientFactory-Sample");

        var client = ClientFactory.CreateClient();

        var response = await client.SendAsync(request);

        if (response.IsSuccessStatusCode)
        {
            using var responseStream = await response.Content.ReadAsStreamAsync();
            branches = await JsonSerializer.DeserializeAsync
                <IEnumerable<GitHubBranch>>(responseStream);
        }
        else
        {
            getBranchesError = true;
        }

        shouldRender = true;
    }

    private string GetSortStyle(string columnName)
    {
        if (CurrentSortColumn != columnName)
        {
            return string.Empty;
        }
        if (IsSortedAscending)
        {
            return "fa-sort-up";
        }
        else
        {
            return "fa-sort-down";
        }
    }*@